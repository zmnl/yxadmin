<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="group.yunxin.mapper.TbQuesBankMapper" >
  <resultMap id="BaseResultMap" type="group.yunxin.pojo.TbQuesBank" >
    <result column="ques_id" property="quesId" jdbcType="BIGINT" />
    <result column="bank_id" property="bankId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ques_id, bank_id
  </sql>
  <select id="searchQues" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT * FROM tb_ques WHERE tb_ques.`id` IN
    (SELECT tb_ques_bank.`ques_id` FROM tb_ques_bank WHERE tb_ques_bank.`bank_id` = #{bank_id,jdbcType=BIGINT} and tb_ques_bank.`ques_id` = #{ques_id,jdbcType=BIGINT});
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="group.yunxin.pojo.TbQuesBankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_ques_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteQues" parameterType="java.lang.Long">
  	delete from tb_ques_bank WHERE
  	tb_ques_bank.`bank_id` = #{bank_id,jdbcType=BIGINT} and tb_ques_bank.`ques_id` = #{ques_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="group.yunxin.pojo.TbQuesBankExample" >
    delete from tb_ques_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="group.yunxin.pojo.TbQuesBank" >
    insert into tb_ques_bank (ques_id, bank_id)
    values (#{quesId,jdbcType=BIGINT}, #{bankId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="group.yunxin.pojo.TbQuesBank" >
    insert into tb_ques_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="quesId != null" >
        ques_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="quesId != null" >
        #{quesId,jdbcType=BIGINT},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="group.yunxin.pojo.TbQuesBankExample" resultType="java.lang.Integer" >
    select count(*) from tb_ques_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_ques_bank
    <set >
      <if test="record.quesId != null" >
        ques_id = #{record.quesId,jdbcType=BIGINT},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_ques_bank
    set ques_id = #{record.quesId,jdbcType=BIGINT},
      bank_id = #{record.bankId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>